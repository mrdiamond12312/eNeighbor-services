# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
    ports:
      - 3333:3333

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
    depends_on:
      staging-db:
        condition: service_healthy
    networks:
      - staging_eNeighbor
      - dev_eNeighbor
  
  dev-db:
    image: postgres
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=dev-eNeighbor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev@eNeighbor
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev_eNeighbor

  staging-db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=eNeighbor
      - POSTGRES_PASSWORD=root@eNeighbor
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - staging_eNeighbor

volumes:
  db-data:
# secrets:
#   db-password:
#     file: db/password.txt
networks:
  dev_eNeighbor:
  staging_eNeighbor:

